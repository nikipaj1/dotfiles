-- Go language support
return {
  {
    "ray-x/go.nvim",
    dependencies = {
      "ray-x/guihua.lua",
      "neovim/nvim-lspconfig",
      "nvim-treesitter/nvim-treesitter",
    },
    config = function()
      require("go").setup({
        goimport = "gopls",
        gofmt = "gofumpt",
        tag_transform = false,
        test_dir = "",
        comment_placeholder = "   ",
        lsp_cfg = {
          capabilities = require("cmp_nvim_lsp").default_capabilities(),
          settings = {
            gopls = {
              analyses = {
                unusedparams = true,
              },
              staticcheck = true,
              gofumpt = true,
              usePlaceholders = true,
              completeUnimported = true,
              matcher = "fuzzy",
            },
          },
        },
        lsp_gofumpt = true,
        lsp_on_attach = true,
        dap_debug = true,
      })
    end,
    event = { "CmdlineEnter" },
    ft = { "go", "gomod" },
    build = ':lua require("go.install").update_all_sync()',
    keys = {
      { "<leader>gsj", "<cmd>GoAddTag json<cr>", desc = "Add json struct tags" },
      { "<leader>gsy", "<cmd>GoAddTag yaml<cr>", desc = "Add yaml struct tags" },
      { "<leader>gst", "<cmd>GoAddTag<cr>", desc = "Add struct tags" },
      { "<leader>gso", "<cmd>GoRmTag<cr>", desc = "Remove struct tags" },
      { "<leader>gsf", "<cmd>GoFillStruct<cr>", desc = "Fill struct" },
      { "<leader>gsi", "<cmd>GoIfErr<cr>", desc = "Add if err" },
      { "<leader>gsc", "<cmd>GoClearTag<cr>", desc = "Clear tags" },
      { "<leader>gco", "<cmd>GoCoverage<cr>", desc = "Test coverage" },
      { "<leader>gct", "<cmd>GoCoverageToggle<cr>", desc = "Toggle test coverage" },
      { "<leader>gca", "<cmd>GoCoverageClear<cr>", desc = "Clear test coverage" },
      { "<leader>gte", "<cmd>GoTestFunc<cr>", desc = "Test function" },
      { "<leader>gtf", "<cmd>GoTestFile<cr>", desc = "Test file" },
      { "<leader>gta", "<cmd>GoTest<cr>", desc = "Test all" },
      { "<leader>gtv", "<cmd>GoTestFunc -v<cr>", desc = "Test function verbose" },
      { "<leader>gts", "<cmd>GoTestSum<cr>", desc = "Test sum" },
      { "<leader>gie", "<cmd>GoIfErr<cr>", desc = "Generate if err" },
      { "<leader>gfs", "<cmd>GoFillStruct<cr>", desc = "Fill struct" },
      { "<leader>gfp", "<cmd>GoFillPar<cr>", desc = "Fill par" },
      { "<leader>gfs", "<cmd>GoFixPlurals<cr>", desc = "Fix plurals" },
      { "<leader>gia", "<cmd>GoImpl<cr>", desc = "Go impl" },
      { "<leader>gic", "<cmd>GoImpl<cr>", desc = "Go impl cursor" },
      { "<leader>gk", "<cmd>GoDocBrowser<cr>", desc = "Go doc browser" },
      { "<leader>gm", "<cmd>GoMod<cr>", desc = "Go mod" },
      { "<leader>gmt", "<cmd>GoModTidy<cr>", desc = "Go mod tidy" },
      { "<leader>gmi", "<cmd>GoModInit<cr>", desc = "Go mod init" },
      { "<leader>gmv", "<cmd>GoModVendor<cr>", desc = "Go mod vendor" },
      { "<leader>gg", "<cmd>GoGenerate<cr>", desc = "Go generate" },
      { "<leader>gG", "<cmd>GoGenerate %<cr>", desc = "Go generate file" },
      { "<leader>gr", "<cmd>GoRun<cr>", desc = "Go run" },
      { "<leader>gR", "<cmd>GoRun %<cr>", desc = "Go run file" },
      { "<leader>gb", "<cmd>GoBuild<cr>", desc = "Go build" },
      { "<leader>gB", "<cmd>GoBuild %<cr>", desc = "Go build file" },
      { "<leader>gi", "<cmd>GoInstall<cr>", desc = "Go install" },
      { "<leader>gI", "<cmd>GoInstall %<cr>", desc = "Go install file" },
    },
  },
} 